// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Process docutil nodes correctly correctly creates nodes from docutils 1`] = `
Array [
  Array [
    Object {
      "attributes": Object {
        "source": "/home/cristian/docs/docs/source/vgs-collect/masking.rst",
      },
      "children": Array [],
      "id": "uuid-from-gatsby",
      "internal": Object {
        "contentDigest": "contentDigest",
        "type": "Docutils",
      },
      "parent": "whatever",
      "tag": "document",
      "xmlChildren": Array [
        Object {
          "attributes": Object {
            "ids": "masking-and-formatting",
            "names": "masking and formatting",
          },
          "children": Array [
            Object {
              "attributes": Object {},
              "children": Array [
                "Masking and formatting",
              ],
              "tag": "title",
            },
            Object {
              "attributes": Object {
                "alt": "'VGS Collect.js masked input'",
                "candidates": "{'*': 'vgs-collect/../../_static/img/masking-collect.gif'}",
                "uri": "vgs-collect/../../_static/img/masking-collect.gif",
              },
              "children": Array [],
              "tag": "image",
            },
            Object {
              "attributes": Object {
                "ids": "create-a-custom-mask",
                "names": "create a custom mask",
              },
              "children": Array [
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Create a custom mask",
                  ],
                  "tag": "title",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Input mask refers to a string expression, defined by a developer, that constrains user input. This method is available for those type of the fields:",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "text",
                      ],
                      "tag": "literal",
                    },
                    ",",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "textarea",
                      ],
                      "tag": "literal",
                    },
                    ",",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "password",
                      ],
                      "tag": "literal",
                    },
                    ",",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "zip-code",
                      ],
                      "tag": "literal",
                    },
                    ".",
                  ],
                  "tag": "paragraph",
                },
                Object {
                  "attributes": Object {
                    "highlight_args": "{}",
                    "language": "none",
                    "linenos": "False",
                  },
                  "children": Array [
                    "field.mask(mask, maskChar, formatChar);",
                  ],
                  "tag": "literal_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "mask",
                          ],
                          "tag": "literal",
                        },
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "String",
                          ],
                          "tag": "emphasis",
                        },
                      ],
                      "tag": "line",
                    },
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "mask string. Default format characters are:",
                            Object {
                              "attributes": Object {},
                              "children": Array [
                                "9: [0-9]",
                              ],
                              "tag": "literal",
                            },
                            ",",
                            Object {
                              "attributes": Object {},
                              "children": Array [
                                "a: [A-Za-z]",
                              ],
                              "tag": "literal",
                            },
                            ",",
                            Object {
                              "attributes": Object {},
                              "children": Array [
                                "*: [A-Za-z0-9]",
                              ],
                              "tag": "literal",
                            },
                            ".",
                          ],
                          "tag": "line",
                        },
                      ],
                      "tag": "line_block",
                    },
                  ],
                  "tag": "line_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "maskChar",
                          ],
                          "tag": "literal",
                        },
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "String",
                          ],
                          "tag": "emphasis",
                        },
                      ],
                      "tag": "line",
                    },
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "character to cover unfilled parts of the mask. By default -",
                            Object {
                              "attributes": Object {},
                              "children": Array [
                                "null",
                              ],
                              "tag": "literal",
                            },
                            ".",
                          ],
                          "tag": "line",
                        },
                      ],
                      "tag": "line_block",
                    },
                  ],
                  "tag": "line_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "formatChar",
                          ],
                          "tag": "literal",
                        },
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "Object",
                          ],
                          "tag": "emphasis",
                        },
                      ],
                      "tag": "line",
                    },
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "defines format characters with characters as keys and corresponding RegExp strings as a value.",
                          ],
                          "tag": "line",
                        },
                      ],
                      "tag": "line_block",
                    },
                  ],
                  "tag": "line_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Example:",
                  ],
                  "tag": "paragraph",
                },
                Object {
                  "attributes": Object {
                    "highlight_args": "{}",
                    "language": "javascript",
                    "linenos": "False",
                  },
                  "children": Array [
                    "f.field(\\"#ssn .field-space\\", {}).mask('999-99-9999', '*');

f.field(\\"#random-mask .field-space\\", {}).mask('XXXXX', null, {'X': '[0-9]'});",
                  ],
                  "tag": "literal_block",
                },
              ],
              "tag": "section",
            },
            Object {
              "attributes": Object {
                "ids": "define-string-replace-pattern",
                "names": "define string replace pattern",
              },
              "children": Array [
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Define string replace pattern",
                  ],
                  "tag": "title",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Method returns a new string with some or all matches of a pattern replaced by a replacement. This method is available for those type of the fields:",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "text",
                      ],
                      "tag": "literal",
                    },
                    ",",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "textarea",
                      ],
                      "tag": "literal",
                    },
                    ",",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "password",
                      ],
                      "tag": "literal",
                    },
                    ",",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "zip-code",
                      ],
                      "tag": "literal",
                    },
                    ".",
                  ],
                  "tag": "paragraph",
                },
                Object {
                  "attributes": Object {
                    "highlight_args": "{}",
                    "language": "none",
                    "linenos": "False",
                  },
                  "children": Array [
                    "field.replacePattern(regExpString, newSubStr);",
                  ],
                  "tag": "literal_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "regExpString",
                          ],
                          "tag": "literal",
                        },
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "String",
                          ],
                          "tag": "emphasis",
                        },
                      ],
                      "tag": "line",
                    },
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "a RegExpobject or literal. The match or matches are replaced with",
                            Object {
                              "attributes": Object {},
                              "children": Array [
                                "newSubStr",
                              ],
                              "tag": "title_reference",
                            },
                            ".",
                          ],
                          "tag": "line",
                        },
                      ],
                      "tag": "line_block",
                    },
                  ],
                  "tag": "line_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "newSubStr",
                          ],
                          "tag": "literal",
                        },
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "String",
                          ],
                          "tag": "emphasis",
                        },
                      ],
                      "tag": "line",
                    },
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            "the string that replaces the substring specified by the regExp. By default - empty string.",
                          ],
                          "tag": "line",
                        },
                      ],
                      "tag": "line_block",
                    },
                  ],
                  "tag": "line_block",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Example:",
                  ],
                  "tag": "paragraph",
                },
                Object {
                  "attributes": Object {
                    "highlight_args": "{}",
                    "language": "javascript",
                    "linenos": "False",
                  },
                  "children": Array [
                    "f.field(\\"#letters-only .field-space\\", {}).replacePattern('/[^a-zA-Z\\\\\\\\s]+/g');

f.field(\\"#numeric-only .field-space\\", {}).replacePattern('/[^\\\\\\\\d]+/g');",
                  ],
                  "tag": "literal_block",
                },
              ],
              "tag": "section",
            },
            Object {
              "attributes": Object {
                "ids": "control-expiration-date-year-length",
                "names": "control expiration date year length",
              },
              "children": Array [
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Control expiration date year length",
                  ],
                  "tag": "title",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "By default expiration date format is -",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "MM/YYYY",
                      ],
                      "tag": "literal",
                    },
                    ". If you want to change the length of the year from 4 to 2 digits, just simply set",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "yearLength",
                      ],
                      "tag": "literal",
                    },
                    "param to",
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        "2",
                      ],
                      "tag": "literal",
                    },
                    ".",
                  ],
                  "tag": "paragraph",
                },
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Example:",
                  ],
                  "tag": "paragraph",
                },
                Object {
                  "attributes": Object {
                    "highlight_args": "{}",
                    "language": "javascript",
                    "linenos": "False",
                  },
                  "children": Array [
                    "f.field(\\"#expiration-date .field-space\\", { yearLength: 2 });",
                  ],
                  "tag": "literal_block",
                },
              ],
              "tag": "section",
            },
            Object {
              "attributes": Object {
                "ids": "playgrounds",
                "names": "playgrounds",
              },
              "children": Array [
                Object {
                  "attributes": Object {},
                  "children": Array [
                    "Playgrounds",
                  ],
                  "tag": "title",
                },
                Object {
                  "attributes": Object {
                    "bullet": "-",
                  },
                  "children": Array [
                    Object {
                      "attributes": Object {},
                      "children": Array [
                        Object {
                          "attributes": Object {},
                          "children": Array [
                            Object {
                              "attributes": Object {
                                "format": "html",
                              },
                              "children": Array [
                                "<a href=\\"https://verygoodsecurity.github.io/vgs-collect-examples/masked-examples.html\\" target=\\"_blank\\">VGS Collect.js masking and formatting examples page</a>",
                              ],
                              "tag": "raw",
                            },
                          ],
                          "tag": "paragraph",
                        },
                      ],
                      "tag": "list_item",
                    },
                  ],
                  "tag": "bullet_list",
                },
                Object {
                  "attributes": Object {
                    "names": "masking_examples",
                  },
                  "children": Array [
                    Object {
                      "attributes": Object {
                        "format": "html",
                      },
                      "children": Array [
                        "<a href=\\"https://verygoodsecurity.github.io/vgs-collect-examples/masked-examples.html\\" target=\\"_blank\\">VGS Collect.js masking and formatting examples page</a>",
                      ],
                      "tag": "raw",
                    },
                  ],
                  "tag": "substitution_definition",
                },
              ],
              "tag": "section",
            },
          ],
          "tag": "section",
        },
      ],
    },
  ],
]
`;

exports[`Process docutil nodes correctly correctly creates nodes from docutils 2`] = `
Array [
  Array [
    Object {
      "child": Object {
        "attributes": Object {
          "source": "/home/cristian/docs/docs/source/vgs-collect/masking.rst",
        },
        "children": Array [],
        "id": "uuid-from-gatsby",
        "internal": Object {
          "contentDigest": "contentDigest",
          "type": "Docutils",
        },
        "parent": "whatever",
        "tag": "document",
        "xmlChildren": Array [
          Object {
            "attributes": Object {
              "ids": "masking-and-formatting",
              "names": "masking and formatting",
            },
            "children": Array [
              Object {
                "attributes": Object {},
                "children": Array [
                  "Masking and formatting",
                ],
                "tag": "title",
              },
              Object {
                "attributes": Object {
                  "alt": "'VGS Collect.js masked input'",
                  "candidates": "{'*': 'vgs-collect/../../_static/img/masking-collect.gif'}",
                  "uri": "vgs-collect/../../_static/img/masking-collect.gif",
                },
                "children": Array [],
                "tag": "image",
              },
              Object {
                "attributes": Object {
                  "ids": "create-a-custom-mask",
                  "names": "create a custom mask",
                },
                "children": Array [
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Create a custom mask",
                    ],
                    "tag": "title",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Input mask refers to a string expression, defined by a developer, that constrains user input. This method is available for those type of the fields:",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "text",
                        ],
                        "tag": "literal",
                      },
                      ",",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "textarea",
                        ],
                        "tag": "literal",
                      },
                      ",",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "password",
                        ],
                        "tag": "literal",
                      },
                      ",",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "zip-code",
                        ],
                        "tag": "literal",
                      },
                      ".",
                    ],
                    "tag": "paragraph",
                  },
                  Object {
                    "attributes": Object {
                      "highlight_args": "{}",
                      "language": "none",
                      "linenos": "False",
                    },
                    "children": Array [
                      "field.mask(mask, maskChar, formatChar);",
                    ],
                    "tag": "literal_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "mask",
                            ],
                            "tag": "literal",
                          },
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "String",
                            ],
                            "tag": "emphasis",
                          },
                        ],
                        "tag": "line",
                      },
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "mask string. Default format characters are:",
                              Object {
                                "attributes": Object {},
                                "children": Array [
                                  "9: [0-9]",
                                ],
                                "tag": "literal",
                              },
                              ",",
                              Object {
                                "attributes": Object {},
                                "children": Array [
                                  "a: [A-Za-z]",
                                ],
                                "tag": "literal",
                              },
                              ",",
                              Object {
                                "attributes": Object {},
                                "children": Array [
                                  "*: [A-Za-z0-9]",
                                ],
                                "tag": "literal",
                              },
                              ".",
                            ],
                            "tag": "line",
                          },
                        ],
                        "tag": "line_block",
                      },
                    ],
                    "tag": "line_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "maskChar",
                            ],
                            "tag": "literal",
                          },
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "String",
                            ],
                            "tag": "emphasis",
                          },
                        ],
                        "tag": "line",
                      },
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "character to cover unfilled parts of the mask. By default -",
                              Object {
                                "attributes": Object {},
                                "children": Array [
                                  "null",
                                ],
                                "tag": "literal",
                              },
                              ".",
                            ],
                            "tag": "line",
                          },
                        ],
                        "tag": "line_block",
                      },
                    ],
                    "tag": "line_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "formatChar",
                            ],
                            "tag": "literal",
                          },
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "Object",
                            ],
                            "tag": "emphasis",
                          },
                        ],
                        "tag": "line",
                      },
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "defines format characters with characters as keys and corresponding RegExp strings as a value.",
                            ],
                            "tag": "line",
                          },
                        ],
                        "tag": "line_block",
                      },
                    ],
                    "tag": "line_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Example:",
                    ],
                    "tag": "paragraph",
                  },
                  Object {
                    "attributes": Object {
                      "highlight_args": "{}",
                      "language": "javascript",
                      "linenos": "False",
                    },
                    "children": Array [
                      "f.field(\\"#ssn .field-space\\", {}).mask('999-99-9999', '*');

f.field(\\"#random-mask .field-space\\", {}).mask('XXXXX', null, {'X': '[0-9]'});",
                    ],
                    "tag": "literal_block",
                  },
                ],
                "tag": "section",
              },
              Object {
                "attributes": Object {
                  "ids": "define-string-replace-pattern",
                  "names": "define string replace pattern",
                },
                "children": Array [
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Define string replace pattern",
                    ],
                    "tag": "title",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Method returns a new string with some or all matches of a pattern replaced by a replacement. This method is available for those type of the fields:",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "text",
                        ],
                        "tag": "literal",
                      },
                      ",",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "textarea",
                        ],
                        "tag": "literal",
                      },
                      ",",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "password",
                        ],
                        "tag": "literal",
                      },
                      ",",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "zip-code",
                        ],
                        "tag": "literal",
                      },
                      ".",
                    ],
                    "tag": "paragraph",
                  },
                  Object {
                    "attributes": Object {
                      "highlight_args": "{}",
                      "language": "none",
                      "linenos": "False",
                    },
                    "children": Array [
                      "field.replacePattern(regExpString, newSubStr);",
                    ],
                    "tag": "literal_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "regExpString",
                            ],
                            "tag": "literal",
                          },
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "String",
                            ],
                            "tag": "emphasis",
                          },
                        ],
                        "tag": "line",
                      },
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "a RegExpobject or literal. The match or matches are replaced with",
                              Object {
                                "attributes": Object {},
                                "children": Array [
                                  "newSubStr",
                                ],
                                "tag": "title_reference",
                              },
                              ".",
                            ],
                            "tag": "line",
                          },
                        ],
                        "tag": "line_block",
                      },
                    ],
                    "tag": "line_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "newSubStr",
                            ],
                            "tag": "literal",
                          },
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "String",
                            ],
                            "tag": "emphasis",
                          },
                        ],
                        "tag": "line",
                      },
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              "the string that replaces the substring specified by the regExp. By default - empty string.",
                            ],
                            "tag": "line",
                          },
                        ],
                        "tag": "line_block",
                      },
                    ],
                    "tag": "line_block",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Example:",
                    ],
                    "tag": "paragraph",
                  },
                  Object {
                    "attributes": Object {
                      "highlight_args": "{}",
                      "language": "javascript",
                      "linenos": "False",
                    },
                    "children": Array [
                      "f.field(\\"#letters-only .field-space\\", {}).replacePattern('/[^a-zA-Z\\\\\\\\s]+/g');

f.field(\\"#numeric-only .field-space\\", {}).replacePattern('/[^\\\\\\\\d]+/g');",
                    ],
                    "tag": "literal_block",
                  },
                ],
                "tag": "section",
              },
              Object {
                "attributes": Object {
                  "ids": "control-expiration-date-year-length",
                  "names": "control expiration date year length",
                },
                "children": Array [
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Control expiration date year length",
                    ],
                    "tag": "title",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "By default expiration date format is -",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "MM/YYYY",
                        ],
                        "tag": "literal",
                      },
                      ". If you want to change the length of the year from 4 to 2 digits, just simply set",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "yearLength",
                        ],
                        "tag": "literal",
                      },
                      "param to",
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          "2",
                        ],
                        "tag": "literal",
                      },
                      ".",
                    ],
                    "tag": "paragraph",
                  },
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Example:",
                    ],
                    "tag": "paragraph",
                  },
                  Object {
                    "attributes": Object {
                      "highlight_args": "{}",
                      "language": "javascript",
                      "linenos": "False",
                    },
                    "children": Array [
                      "f.field(\\"#expiration-date .field-space\\", { yearLength: 2 });",
                    ],
                    "tag": "literal_block",
                  },
                ],
                "tag": "section",
              },
              Object {
                "attributes": Object {
                  "ids": "playgrounds",
                  "names": "playgrounds",
                },
                "children": Array [
                  Object {
                    "attributes": Object {},
                    "children": Array [
                      "Playgrounds",
                    ],
                    "tag": "title",
                  },
                  Object {
                    "attributes": Object {
                      "bullet": "-",
                    },
                    "children": Array [
                      Object {
                        "attributes": Object {},
                        "children": Array [
                          Object {
                            "attributes": Object {},
                            "children": Array [
                              Object {
                                "attributes": Object {
                                  "format": "html",
                                },
                                "children": Array [
                                  "<a href=\\"https://verygoodsecurity.github.io/vgs-collect-examples/masked-examples.html\\" target=\\"_blank\\">VGS Collect.js masking and formatting examples page</a>",
                                ],
                                "tag": "raw",
                              },
                            ],
                            "tag": "paragraph",
                          },
                        ],
                        "tag": "list_item",
                      },
                    ],
                    "tag": "bullet_list",
                  },
                  Object {
                    "attributes": Object {
                      "names": "masking_examples",
                    },
                    "children": Array [
                      Object {
                        "attributes": Object {
                          "format": "html",
                        },
                        "children": Array [
                          "<a href=\\"https://verygoodsecurity.github.io/vgs-collect-examples/masked-examples.html\\" target=\\"_blank\\">VGS Collect.js masking and formatting examples page</a>",
                        ],
                        "tag": "raw",
                      },
                    ],
                    "tag": "substitution_definition",
                  },
                ],
                "tag": "section",
              },
            ],
            "tag": "section",
          },
        ],
      },
      "parent": Object {
        "children": Array [],
        "content": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!DOCTYPE document PUBLIC \\"+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML\\" \\"http://docutils.sourceforge.net/docs/ref/docutils.dtd\\">
<!-- Generated by Docutils 0.15.2 -->
<document source=\\"/home/cristian/docs/docs/source/vgs-collect/masking.rst\\">
    <section ids=\\"masking-and-formatting\\" names=\\"masking\\\\ and\\\\ formatting\\">
        <title>Masking and formatting</title>
        <image alt=\\"'VGS Collect.js masked input'\\" candidates=\\"{'*': 'vgs-collect/../../_static/img/masking-collect.gif'}\\" uri=\\"vgs-collect/../../_static/img/masking-collect.gif\\"></image>
        <section ids=\\"create-a-custom-mask\\" names=\\"create\\\\ a\\\\ custom\\\\ mask\\">
            <title>Create a custom mask</title>
            <paragraph>Input mask refers to a string expression, defined by a developer, that constrains user input.
                This method is available for those type of the fields: <literal>text</literal>, <literal>textarea</literal>, <literal>password</literal>, <literal>zip-code</literal>.</paragraph>
            <literal_block highlight_args=\\"{}\\" language=\\"none\\" linenos=\\"False\\" xml:space=\\"preserve\\">field.mask(mask, maskChar, formatChar);</literal_block>
            <line_block>
                <line><literal>mask</literal> <emphasis>String</emphasis></line>
                <line_block>
                    <line>mask string. Default format characters are: <literal>9: [0-9]</literal>, <literal>a: [A-Za-z]</literal>, <literal>*: [A-Za-z0-9]</literal>.</line>
                </line_block>
            </line_block>
            <line_block>
                <line><literal>maskChar</literal> <emphasis>String</emphasis></line>
                <line_block>
                    <line>character to cover unfilled parts of the mask. By default - <literal>null</literal>.</line>
                </line_block>
            </line_block>
            <line_block>
                <line><literal>formatChar</literal> <emphasis>Object</emphasis></line>
                <line_block>
                    <line>defines format characters with characters as keys and corresponding RegExp strings as a value.</line>
                </line_block>
            </line_block>
            <paragraph>Example:</paragraph>
            <literal_block highlight_args=\\"{}\\" language=\\"javascript\\" linenos=\\"False\\" xml:space=\\"preserve\\">f.field(\\"#ssn .field-space\\", {}).mask('999-99-9999', '*');

f.field(\\"#random-mask .field-space\\", {}).mask('XXXXX', null, {'X': '[0-9]'});</literal_block>
        </section>
        <section ids=\\"define-string-replace-pattern\\" names=\\"define\\\\ string\\\\ replace\\\\ pattern\\">
            <title>Define string replace pattern</title>
            <paragraph>Method returns a new string with some or all matches of a pattern replaced by a replacement.
                This method is available for those type of the fields: <literal>text</literal>, <literal>textarea</literal>, <literal>password</literal>, <literal>zip-code</literal>.</paragraph>
            <literal_block highlight_args=\\"{}\\" language=\\"none\\" linenos=\\"False\\" xml:space=\\"preserve\\">field.replacePattern(regExpString, newSubStr);</literal_block>
            <line_block>
                <line><literal>regExpString</literal> <emphasis>String</emphasis></line>
                <line_block>
                    <line>a RegExp object or literal. The match or matches are replaced with <title_reference>newSubStr</title_reference>.</line>
                </line_block>
            </line_block>
            <line_block>
                <line><literal>newSubStr</literal> <emphasis>String</emphasis></line>
                <line_block>
                    <line>the string that replaces the substring specified by the regExp. By default - empty string.</line>
                </line_block>
            </line_block>
            <paragraph>Example:</paragraph>
            <literal_block highlight_args=\\"{}\\" language=\\"javascript\\" linenos=\\"False\\" xml:space=\\"preserve\\">f.field(\\"#letters-only .field-space\\", {}).replacePattern('/[^a-zA-Z\\\\\\\\s]+/g');

f.field(\\"#numeric-only .field-space\\", {}).replacePattern('/[^\\\\\\\\d]+/g');</literal_block>
        </section>
        <section ids=\\"control-expiration-date-year-length\\" names=\\"control\\\\ expiration\\\\ date\\\\ year\\\\ length\\">
            <title>Control expiration date year length</title>
            <paragraph>By default expiration date format is - <literal>MM/YYYY</literal>. If you want to change the length of the year
                from 4 to 2 digits, just simply set <literal>yearLength</literal> param to <literal>2</literal>.</paragraph>
            <paragraph>Example:</paragraph>
            <literal_block highlight_args=\\"{}\\" language=\\"javascript\\" linenos=\\"False\\" xml:space=\\"preserve\\">f.field(\\"#expiration-date .field-space\\", { yearLength: 2 });</literal_block>
        </section>
        <section ids=\\"playgrounds\\" names=\\"playgrounds\\">
            <title>Playgrounds</title>
            <bullet_list bullet=\\"-\\">
                <list_item>
                    <paragraph><raw format=\\"html\\" xml:space=\\"preserve\\">&lt;a href=\\"https://verygoodsecurity.github.io/vgs-collect-examples/masked-examples.html\\" target=\\"_blank\\"&gt;VGS Collect.js masking and formatting examples page&lt;/a&gt;</raw></paragraph>
                </list_item>
            </bullet_list>
            <substitution_definition names=\\"masking_examples\\"><raw format=\\"html\\" xml:space=\\"preserve\\">&lt;a href=\\"https://verygoodsecurity.github.io/vgs-collect-examples/masked-examples.html\\" target=\\"_blank\\"&gt;VGS Collect.js masking and formatting examples page&lt;/a&gt;</raw></substitution_definition>
        </section>
    </section>
</document>",
        "id": "whatever",
        "internal": Object {
          "contentDigest": "whatever",
          "mediaType": "application/xml",
          "name": "test",
        },
        "name": "nodeName",
        "parent": null,
      },
    },
  ],
]
`;
